# NOTE: This file is auto generated by OpenAPI Generator 6.3.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule PlacetelAPI.Model.Provisioning do
  @moduledoc """
  Provisioning model
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :name,
    :webuser,
    :mac,
    :call_waiting,
    :codec,
    :locale,
    :lines,
    :keys,
    :custom_configurations,
    :device,
    :encryption
  ]

  @type t :: %__MODULE__{
          :id => String.t() | nil,
          :name => String.t() | nil,
          :webuser => PlacetelAPI.Model.User.t() | nil,
          :mac => String.t() | nil,
          :call_waiting => String.t() | nil,
          :codec => String.t() | nil,
          :locale => String.t() | nil,
          :lines => PlacetelAPI.Model.Line.t() | nil,
          :keys => PlacetelAPI.Model.Key.t() | nil,
          :custom_configurations => PlacetelAPI.Model.CustomConfiguration.t() | nil,
          :device => PlacetelAPI.Model.Device.t() | nil,
          :encryption => String.t() | nil
        }
end

defimpl Poison.Decoder, for: PlacetelAPI.Model.Provisioning do
  import PlacetelAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:webuser, :struct, PlacetelAPI.Model.User, options)
    |> deserialize(:lines, :struct, PlacetelAPI.Model.Line, options)
    |> deserialize(:keys, :struct, PlacetelAPI.Model.Key, options)
    |> deserialize(
      :custom_configurations,
      :struct,
      PlacetelAPI.Model.CustomConfiguration,
      options
    )
    |> deserialize(:device, :struct, PlacetelAPI.Model.Device, options)
  end
end
