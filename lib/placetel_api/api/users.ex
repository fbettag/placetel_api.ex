# NOTE: This file is auto generated by OpenAPI Generator 6.3.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule PlacetelAPI.Api.Users do
  @moduledoc """
  API calls for all endpoints tagged `Users`.
  """

  alias PlacetelAPI.Connection
  import PlacetelAPI.RequestBuilder

  @doc """
  Delete a subuser
  Delete a subuser by its ID

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `id` (integer()): Subuser ID
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, PlacetelAPI.Model.User.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec delete_users_id(Tesla.Env.client(), integer(), keyword()) ::
          {:ok, PlacetelAPI.Model.User.t()} | {:error, Tesla.Env.t()}
  def delete_users_id(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:delete)
      |> url("/users/#{id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %PlacetelAPI.Model.User{}}
    ])
  end

  @doc """
  Me
  Information about the current API user

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, PlacetelAPI.Model.Me.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_me(Tesla.Env.client(), keyword()) ::
          {:ok, PlacetelAPI.Model.Me.t()} | {:error, Tesla.Env.t()}
  def get_me(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/me")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %PlacetelAPI.Model.Me{}}
    ])
  end

  @doc """
  Fetch all users
  Fetch a list of all users of the account

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"filter[first_name]"` (String.t): 
    - `:"filter[last_name]"` (String.t): 
    - `:"filter[email]"` (String.t): 
    - `:"filter[login]"` (String.t): 
    - `:page` (integer()): Page of results to fetch.
    - `:per_page` (integer()): Number of results to return per page.

  ### Returns

  - `{:ok, [%User{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_users(Tesla.Env.client(), keyword()) ::
          {:ok, list(PlacetelAPI.Model.User.t())} | {:error, Tesla.Env.t()}
  def get_users(connection, opts \\ []) do
    optional_params = %{
      :"filter[first_name]" => :query,
      :"filter[last_name]" => :query,
      :"filter[email]" => :query,
      :"filter[login]" => :query,
      :page => :query,
      :per_page => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/users")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%PlacetelAPI.Model.User{}]}
    ])
  end

  @doc """
  Fetch user by ID
  Fetch a single user from your account by its ID

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `id` (integer()): User ID
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, PlacetelAPI.Model.User.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_users_id(Tesla.Env.client(), integer(), keyword()) ::
          {:ok, PlacetelAPI.Model.User.t()} | {:error, Tesla.Env.t()}
  def get_users_id(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/users/#{id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %PlacetelAPI.Model.User{}}
    ])
  end

  @doc """
  Create new subuser
  Create a new subuser for your account

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `users` (PostUsers): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, PlacetelAPI.Model.User.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec post_users(Tesla.Env.client(), PlacetelAPI.Model.PostUsers.t(), keyword()) ::
          {:ok, PlacetelAPI.Model.User.t()} | {:error, Tesla.Env.t()}
  def post_users(connection, users, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/users")
      |> add_param(:body, :body, users)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {201, %PlacetelAPI.Model.User{}}
    ])
  end

  @doc """
  Reset password for account
  Reset password for account

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `id` (integer()): User ID
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec post_users_id_password_reset(Tesla.Env.client(), integer(), keyword()) ::
          {:ok, nil} | {:error, Tesla.Env.t()}
  def post_users_id_password_reset(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/users/#{id}/password_reset")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false},
      {400, false}
    ])
  end

  @doc """
  Update a subuser
  Update an existing subuser for your account

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `id` (integer()): User ID
  - `users` (PutUsers): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, PlacetelAPI.Model.User.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec put_users_id(Tesla.Env.client(), integer(), PlacetelAPI.Model.PutUsers.t(), keyword()) ::
          {:ok, PlacetelAPI.Model.User.t()} | {:error, Tesla.Env.t()}
  def put_users_id(connection, id, users, _opts \\ []) do
    request =
      %{}
      |> method(:put)
      |> url("/users/#{id}")
      |> add_param(:body, :body, users)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %PlacetelAPI.Model.User{}}
    ])
  end
end
