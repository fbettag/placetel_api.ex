# NOTE: This file is auto generated by OpenAPI Generator 6.3.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule PlacetelAPI.Api.Routings do
  @moduledoc """
  API calls for all endpoints tagged `Routings`.
  """

  alias PlacetelAPI.Connection
  import PlacetelAPI.RequestBuilder

  @doc """
  Delete a routing object
  Delete a routing object

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `number_or_id` (String.t): A number or an ID
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, PlacetelAPI.Model.RoutingObject.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec delete_routings_number_or_id(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, PlacetelAPI.Model.RoutingObject.t()} | {:error, Tesla.Env.t()}
  def delete_routings_number_or_id(connection, number_or_id, _opts \\ []) do
    request =
      %{}
      |> method(:delete)
      |> url("/routings/#{number_or_id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %PlacetelAPI.Model.RoutingObject{}}
    ])
  end

  @doc """
  Get all routings
  Provides a list of routing

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"filter[updated_at_gte]"` (DateTime.t): 
    - `:"filter[updated_at_lte]"` (DateTime.t): 
    - `:page` (integer()): Page of results to fetch.
    - `:per_page` (integer()): Number of results to return per page.

  ### Returns

  - `{:ok, [%RoutingObject{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_routings(Tesla.Env.client(), keyword()) ::
          {:ok, list(PlacetelAPI.Model.RoutingObject.t())} | {:error, Tesla.Env.t()}
  def get_routings(connection, opts \\ []) do
    optional_params = %{
      :"filter[updated_at_gte]" => :query,
      :"filter[updated_at_lte]" => :query,
      :page => :query,
      :per_page => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/routings")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, [%PlacetelAPI.Model.RoutingObject{}]}
    ])
  end

  @doc """
  Retrieve routing
  Fetches a routing

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `number_or_id` (String.t): A number or an ID
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, PlacetelAPI.Model.RoutingObject.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_routings_number_or_id(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, PlacetelAPI.Model.RoutingObject.t()} | {:error, Tesla.Env.t()}
  def get_routings_number_or_id(connection, number_or_id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/routings/#{number_or_id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %PlacetelAPI.Model.RoutingObject{}}
    ])
  end

  @doc """
  Create a routing object
  Create a routing object. Routing can be created as: `forward`, `group`, `ivr`, `queue` or `api`

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `routings` (PostRoutings): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, PlacetelAPI.Model.RoutingObject.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec post_routings(Tesla.Env.client(), PlacetelAPI.Model.PostRoutings.t(), keyword()) ::
          {:ok, PlacetelAPI.Model.RoutingObject.t()} | {:error, Tesla.Env.t()}
  def post_routings(connection, routings, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/routings")
      |> add_param(:body, :body, routings)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {201, %PlacetelAPI.Model.RoutingObject{}}
    ])
  end

  @doc """
  Update routing
  Updates the routing object. Routing can be set to: `forward`, `group`, `plan`, `ivr`, `queue` or `api`

  ### Parameters

  - `connection` (PlacetelAPI.Connection): Connection to server
  - `number_or_id` (String.t): A number or an ID
  - `routings` (PutRoutings): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, PlacetelAPI.Model.RoutingObject.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec put_routings_number_or_id(
          Tesla.Env.client(),
          String.t(),
          PlacetelAPI.Model.PutRoutings.t(),
          keyword()
        ) :: {:ok, PlacetelAPI.Model.RoutingObject.t()} | {:error, Tesla.Env.t()}
  def put_routings_number_or_id(connection, number_or_id, routings, _opts \\ []) do
    request =
      %{}
      |> method(:put)
      |> url("/routings/#{number_or_id}")
      |> add_param(:body, :body, routings)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %PlacetelAPI.Model.RoutingObject{}}
    ])
  end
end
